// Loro Piana
var _inside = _inside || [];
// var _inside = [];
var _insideLoaded = _insideLoaded || false;
var _insideJQ = _insideJQ || null;

(function () {
	if (_insideLoaded)
		return;
	_insideLoaded = true;

	var accountKey = "IN-1001068";
	var trackerURL = "eu4-cdn.inside-graph.com";
	var subsiteId = null;
	var insideOrderTotal = insideOrderTotal || 0;
	var _insideMaxLoop = 5;
	var _insideCurLoop = 0;
	var _insideFirstLoad = false;
	var _insideCurrency = null;
	var _insideDataLayer = null;
	var tempcururl = window.location.href;
	var temppageview = "other";
	var tempinsideloggedinname = null;
	var _insideCartAddIndex = 0;
	var _insideSizeGuideVisible = false;

	// Utility Functions
	function log() {
		if (typeof (console) != "undefined" && typeof (console.log) != "undefined") {
			// console.log("[INSIDE]", Array.prototype.slice.call(arguments));
		}
	}

	function deferWait(callback, test) {
		if (test()) {
			callback();
			return;
		}
		var _interval = 10;
		var _spin = function () {
			if (test()) {
				callback();
			}
			else {
				_interval = _interval >= 1000 ? 1000 : _interval * 2;
				setTimeout(_spin, _interval);
			}
		};
		setTimeout(_spin, _interval);
	}

	function keepWait(callback, test) {
		if (test()) {
			callback();
			if (_insideCurLoop >= _insideMaxLoop) {
				return;
			}
		}
		var _interval = 2000;
		var _spin = function () {
			if (test()) {
				_insideCurLoop = _insideCurLoop + 1;
				callback();
				if (_insideCurLoop >= _insideMaxLoop) {
					return;
				}
			}
			setTimeout(_spin, _interval);
		};
		setTimeout(_spin, _interval);
	}

	var indexOf = [].indexOf || function (prop) {
		for (var i = 0; i < this.length; i++) {
			if (this[i] === prop)
				return i;
		}
		return -1;
	};

	function myTrim(text) {
		try {
			if (typeof (text) != "undefined" && text != null)
				return typeof (text.trim) === "function" ? text.trim() : text.replace(/^\s+|\s+$/gm, '');
		} catch (trimex) { }

		return text;
	}

	function isNumeric(n) {
		try {
			return !isNaN(parseFloat(n)) && isFinite(n);
		}
		catch (tempex) {
		}

		return false;
	}

	function validateEmail(tempmail) {
		try {
			if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/.test(tempmail)) {
				return (true);
			}
		} catch (tempex) { }
		return (false);
	}

	function setCookie(cname, cvalue, exdays) {
		var hostName = window.location.hostname;
		var siteNameFragments = hostName.split(".");
		var siteName = siteNameFragments[1];
		var domain = siteNameFragments.slice(1, siteNameFragments.length).join(".");

		var d = new Date();
		d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));
		var expires = "expires=" + d.toGMTString();
		document.cookie = cname + "=" + cvalue + "; " + expires + ";path=/" + ";domain=." + domain;
	}

	function getCookie(cname) {
		var name = cname + "=";
		var ca = document.cookie.split(';');
		for (var i = 0; i < ca.length; i++) {
			var c = myTrim(ca[i]);
			if (c.indexOf(name) == 0)
				return c.substring(name.length, c.length);
		}
		return null;
	}

	function deleteCookie(cname) {
		document.cookie = cname + "=" + 0 + "; " + "expires=01 Jan 1970 00:00:00 GMT" + ";path=/";
	}

	function roundToTwo(num) {
		if (Math != "undefined" && Math.round != "undefined")
			return +(Math.round(num + "e+2") + "e-2");
		else
			return num;
	}

	function getSearchParameters() {
		var prmstr = window.location.search.substr(1);
		return prmstr != null && prmstr != "" ? transformToAssocArray(prmstr) : [];
	}

	function transformToAssocArray(prmstr) {
		var params = [];
		var prmarr = prmstr.split("&");
		for (var i = 0; i < prmarr.length; i++) {
			params[i] = prmarr[i];
		}

		return params;
	}

	function randomIntFromInterval(min, max) {
		try {
			return Math.floor(Math.random() * (max - min + 1) + min);
		}
		catch (tempex) {
		}

		return min;
	}

	function getDecimalSign(number) {
		try {
			var tempnum = myTrim(number);

			if (tempnum.length > 3) {
				return tempnum.charAt(tempnum.length - 3);
			}
		}
		catch (signex) {
		}

		return ".";
	}

	// End of utility functions

	function processInside(tracker) {
		var searchUrl = "/search?q=";
		var searchQueryString = null;
		var productCategoryUrl = null;
		var productCategoryQueryString = null;
		var productUrl = null;
		var productQueryString = null;
		var checkoutUrl = "/checkout|/cart";
		var checkoutQueryString = null;
		var orderConfirmedUrl = null; // https://it-development-b2c.loropiana.com/en/confirmation
		var orderConfirmedQueryString = null;

		function getViewData() {
			try {

				// Output view data
				// Default view data is "unknown"

				var data = {};

				data.action = "trackView";
				data.type = "article";
				data.url = window.location.href;
				data.name = "Unknown Page: " + window.location.href;
				var tempurl = window.location.href.toLowerCase();

				var temppath = window.location.pathname;
				var temp_loc = temppath.split("/");
				var page = "";

				var add_tags = [];
				var params = getSearchParameters();
				var searchterm = "Search"; // Find the searchterm the
				// visitor
				// entered for the search page to be
				// used as the page name
				if (params != null && params.length > 0) {
					for (var i = 0; i < params.length; i++) {
						if (params[i].indexOf("q=") == 0) {
							searchterm = params[i].split("q=")[1];
						}
					}
				}

				for (var i = 1; i < temp_loc.length; i++) {
					if (temp_loc[i] != null && temp_loc[i].length > 0) {
						if (temp_loc[i].indexOf("?") != -1) {
							var temploc = temp_loc[i].split("?")[0];
							if (temploc.length > 0)
								page = temp_loc[i];
						}
						else {
							page = temp_loc[i];
						}
					}
				}
				var curpage = page.split("?")[0];
				data.name = curpage;

				// Identify and assign the correct page type here
				// The part below is actually very flexible, can use
				// dataLayer too
				// sometimes, etc so if needed can also just delete the
				// global
				// variable parts and make your own algorithm. From my
				// experience
				// the following part will rarely work for all websites.

				var temppagetype = "other";
				try {
					if (typeof (dataLayer) != "undefined" && dataLayer != null && dataLayer.length > 0) {
						for (var i = dataLayer.length - 1; i >= 0; i--) {
							var tempbool = false;
							if (typeof (dataLayer[i]) != "undefined" && dataLayer[i] && dataLayer[i].navlanguage && dataLayer[i].pageCategory) {
								_insideDataLayer = dataLayer[i];
								break;
							}
						}
					}

					if (typeof (_insideDataLayer) != "undefined" && _insideDataLayer != null && _insideDataLayer.pageCategory && _insideDataLayer.pageCategory.length > 0) {
						temppagetype = _insideDataLayer.pageCategory.toLowerCase();
					}

					if (typeof (_insideData) != "undefined" && _insideData != null && _insideData.page && _insideData.page.type && _insideData.page.type.length > 0) {
						temppagetype = _insideData.page.type.toLowerCase();
					}
				} catch (tempex) { }

				if ((temppath == "/" || curpage == "index.html") && temp_loc.length < 3) {
					data.type = "homepage";
				}
				else if (temppagetype == "home" || temppagetype == "home_page" || temppagetype == "homepage") {
					data.type = "homepage";
				}
				else if (temppagetype == "search") {
					data.type = "search";
				}
				else if (temppagetype == "category" || temppagetype == "category_page") {
					data.type = "productcategory";
				}
				else if (temppagetype == "product_detail_page" || temppagetype == "product") {
					data.type = "product";
				}
				else if (temppagetype == "cart_page" || temppagetype == "checkout") {
					data.type = "checkout";
				}
				else if (temppagetype == "orderconfirmed") {
					data.type = "orderconfirmed";
				}
				else if (tempurl.indexOf("/login") != -1 || tempurl.indexOf("/register") != -1) {
					data.type = "login";
				}

				if (productCategoryUrl != null) {
					if (tempurl.indexOf(productCategoryUrl.toLowerCase()) > -1) {
						data.type = "productcategory";
					}
				}
				if (productCategoryQueryString != null) {
					var tempelem = _insideJQ(productCategoryQueryString);
					if (tempelem != null && tempelem.length > 0) {
						data.type = "productcategory";
					}
				}

				if (searchUrl != null) {
					if (tempurl.indexOf(searchUrl.toLowerCase()) > -1) {
						data.type = "search";
					}
				}
				if (searchQueryString != null) {
					var tempelem = _insideJQ(searchQueryString);
					if (tempelem != null && tempelem.length > 0) {
						data.type = "search";
					}
				}

				if (productUrl != null) {
					if (tempurl.indexOf(productUrl.toLowerCase()) > -1) {
						data.type = "product";
					}
				}
				if (productQueryString != null) {
					var tempelem = _insideJQ(productQueryString);
					if (tempelem != null && tempelem.length > 0) {
						data.type = "product";
					}
				}

				if (checkoutUrl != null) {
					if (tempurl.search(checkoutUrl.toLowerCase()) > 0) {
						data.type = "checkout";
					}
				}
				if (checkoutQueryString != null) {
					var tempelem = _insideJQ(checkoutQueryString);
					if (tempelem != null && tempelem.length > 0) {
						data.type = "checkout";
					}
				}

				if (orderConfirmedUrl != null) {
					if (tempurl.indexOf(orderConfirmedUrl.toLowerCase()) > -1) {
						data.type = "orderconfirmed";
					}
				}
				if (orderConfirmedQueryString != null) {
					var tempelem = _insideJQ(orderConfirmedQueryString);
					if (tempelem != null && tempelem.length > 0) {
						data.type = "orderconfirmed";
					}
				}

				try {
					if (typeof (dataLayer) != "undefined" && dataLayer != null && dataLayer.length > 0) {
						for (var i = dataLayer.length - 1; i >= 0; i--) {
							if (typeof (dataLayer[i]) != "undefined" && dataLayer[i] != null && typeof (dataLayer[i].ecommerce) != "undefined" && dataLayer[i].ecommerce != null
								&& typeof (dataLayer[i].ecommerce.purchase) != "undefined" && dataLayer[i].ecommerce.purchase != null
								&& typeof (dataLayer[i].ecommerce.purchase.actionField) != "undefined"
								&& dataLayer[i].ecommerce.purchase.actionField != null
								&& typeof (dataLayer[i].ecommerce.purchase.actionField.id) != "undefined"
								&& dataLayer[i].ecommerce.purchase.actionField.id != null) {
								data.type = "orderconfirmed";
							}
						}
					}

					if (typeof (_insideData) != "undefined" && _insideData != null && _insideData && _insideData.order && typeof (_insideData.order.id) != "undefined" && _insideData.order.id != null && _insideData.order.id && _insideData.order.total) {
						data.type = "orderconfirmed";
					}
				} catch (tempex) { }

				// Finish identying

				switch (data.type) {
					case "homepage":
						data.name = "Home";
						break;
					case "search":
						data.name = "Search Result Page";
						if (searchterm != null && searchterm.length > 0) {
							data.name = decodeURIComponent(searchterm);
							if (data.name.indexOf("+") != -1) {
								data.name = data.name.replace(/\+/g, ' ');
							}

							try {
								var tempsearch = myTrim(_insideJQ("h1.Category-cover-title").text());
								if (tempsearch)
									data.name = tempsearch;
							} catch (tempex) { }
						}
						break;
					case "productcategory":
						var tempcat = getCategory();
						if (tempcat != null && tempcat.length > 0) {
							if (tempcat.length > 149)
								tempcat = tempcat.substring(0, 149);
							data.category = tempcat;
						}

						var tempPageName = getPageName();
						if (tempPageName != null && tempPageName.length > 0)
							data.name = tempPageName;

						break;
					case "product":
						var tempPageName = getPageName();
						if (tempPageName != null && tempPageName.length > 0)
							data.name = tempPageName;

						tempPageName = getProductName();
						if (tempPageName != null && tempPageName.length > 0)
							data.name = tempPageName;

						var tempcat = getCategory();
						if (tempcat != null && tempcat.length > 0) {
							if (tempcat.length > 149)
								tempcat = tempcat.substring(0, 149);
							data.category = tempcat;
						}

						var tempval = getProductImage();
						if (tempval != null && tempval.length > 0)
							data.img = tempval;
						else
							data.type = "other";

						var tempsku = getProductSku();
						if (tempsku != null && tempsku.length > 0) {
							data.sku = tempsku;
							data.name = data.name + " - " + tempsku;
						}
						else {
							data.type = "other";
						}

						var tempprice = getProductPrice();
						if (tempprice != null && tempprice > 0)
							data.price = tempprice;

						try {
							if (_insideJQ(".overlayInternal .size-guide-section-container").length > 0) {
								add_tags.push("sizeguidevisible");
							}

							if (typeof (data.data) == "undefined" || data.data == null) {
								data.data = {};
							}


							if (_insideDataLayer) {
								if (_insideDataLayer.country) {
									data.data.country = _insideDataLayer.country.toUpperCase();
								}
								else {
									data.data.country = window.location.host.split(".")[0];
								}

								if (_insideDataLayer.navlanguage) {
									data.data.language = _insideDataLayer.navlanguage.toUpperCase();
								}
							}
						} catch (tempex) { }
						break;
					case "orderconfirmed":
						data.name = "Order Confirmed";
						break;
					case "checkout":
						var tempPageName = getPageName();
						if (tempPageName != null && tempPageName.length > 0) {
							data.name = tempPageName;
						}
						break;
					default:
						var tempPageName = getPageName();
						if (tempPageName != null && tempPageName.length > 0)
							data.name = tempPageName;
				}

				if (add_tags.length > 0) {
					data.tags = add_tags.join(",");
				}

				// Get view data from page

				return data;
			}
			catch (ex) {
				log("getViewData error: ", ex);
				return null;
			}
		}

		function getPageName() {
			try {
				if (typeof (_insideData) != "undefined" && _insideData != null && _insideData.page && _insideData.page.name)
					return _insideData.page.name;
			}
			catch (tempex) { }

			try {
				var content = document.getElementsByTagName("title");
				if (typeof (content) != "undefined" && content != null && content.length > 0) {
					var result = content[0].textContent || content[0].innerText;
					if (typeof (result) != "undefined" && result != null && result.length > 0) {
						return myTrim(result);
					}
				}
			} catch (pagenameex) { }

			return null;
		}

		function getProductName() {
			try {
				if (typeof (_insideData) != "undefined" && _insideData != null && _insideData.product && _insideData.product.name)
					return _insideData.product.name;
			}
			catch (tempex) { }

			try {
				var ldjsons = _insideJQ('script[type="application/ld+json"]');
				for (var i = 0; i < ldjsons.length; i++) {
					var tempdata = JSON.parse(_insideJQ(ldjsons[i]).last().html().replace(/\n/g, ""));
					if (typeof (tempdata) != "undefined" && tempdata != null && _insideJQ.isArray(tempdata)) {
						for (var l = 0; l < tempdata.length; l++) {
							var tempdetail = tempdata[i];
							if (typeof (tempdetail) != "undefined" && tempdetail != null && typeof (tempdetail["@type"]) != "undefined" && tempdetail["@type"] != null && tempdetail["@type"] == "Product" && typeof (tempdetail.name) != "undefined" && tempdetail.name != null && tempdetail.name.length > 0) {
								if (_insideJQ.isArray(tempdetail.name)) {
									return tempdetail.name[0];
								}
								else
									return tempdetail.name;
							}
						}
					}
					else if (typeof (tempdata) != "undefined" && tempdata != null && typeof (tempdata["@type"]) != "undefined" && tempdata["@type"] != null && tempdata["@type"] == "Product" && typeof (tempdata.name) != "undefined" && tempdata.name != null && tempdata.name.length > 0) {
						if (_insideJQ.isArray(tempdata.name)) {
							return tempdata.name[0];
						}
						else
							return tempdata.name;
					}
				}
			}
			catch (tempex) {
			}

			return null;
		}

		function getProductImage() {
			try {
				if (typeof (_insideData) != "undefined" && _insideData != null && _insideData.product && _insideData.product.image)
					return _insideData.product.image;
			}
			catch (tempex) { }

			try {
				var metaTags = document.getElementsByTagName("meta");

				var fbAppIdContent = "";
				for (var i = 0; i < metaTags.length; i++) {
					if (metaTags[i].getAttribute("property") == "og:image:url") {
						fbAppIdContent = metaTags[i].getAttribute("content");
						return fbAppIdContent;
					}
				}
			}
			catch (tempex) {
			}

			try {
				var ldjsons = _insideJQ('script[type="application/ld+json"]');
				for (var i = 0; i < ldjsons.length; i++) {
					var tempdata = JSON.parse(_insideJQ(ldjsons[i]).last().html().replace(/\n/g, ""));
					if (typeof (tempdata) != "undefined" && tempdata != null && _insideJQ.isArray(tempdata)) {
						for (var l = 0; l < tempdata.length; l++) {
							var tempdetail = tempdata[i];
							if (typeof (tempdetail) != "undefined" && tempdetail != null && typeof (tempdetail["@type"]) != "undefined" && tempdetail["@type"] != null && tempdetail["@type"] == "Product" && typeof (tempdetail.image) != "undefined" && tempdetail.image != null && tempdetail.image.length > 0) {
								if (_insideJQ.isArray(tempdetail.image)) {
									return tempdetail.image[0];
								}
								else
									return tempdetail.image;
							}
						}
					}
					else if (typeof (tempdata) != "undefined" && tempdata != null && typeof (tempdata["@type"]) != "undefined" && tempdata["@type"] != null && tempdata["@type"] == "Product" && typeof (tempdata.image) != "undefined" && tempdata.image != null && tempdata.image.length > 0) {
						if (_insideJQ.isArray(tempdata.image)) {
							return tempdata.image[0];
						}
						else
							return tempdata.image;
					}
				}
			}
			catch (tempex) {
			}

			return null;
		}

		function getProductPrice() {
			try {
				if (typeof (_insideData) != "undefined" && _insideData != null && _insideData.product && _insideData.product.price && isNumeric(_insideData.product.price))
					return parseFloat(_insideData.product.price);
			}
			catch (tempex) { }

			try {
				var tempjsons = _insideJQ('script[type="application/ld+json"]');
				for (var i = 0; i < tempjsons.length; i++) {
					var tempdata = JSON.parse(_insideJQ(tempjsons[i]).html().replace(/\n/g, ""));
					if (typeof (tempdata) != "undefined" && tempdata != null && typeof (tempdata.name) != "undefined" && tempdata.name != null && tempdata.name.length > 0 && typeof (tempdata.sku) != "undefined" && tempdata.sku != null && tempdata.sku.length > 0 && typeof (tempdata.offers) != "undefined" && tempdata.offers != null && typeof (tempdata.offers.price) != "undefined" && tempdata.offers.price != null)
						return tempdata.offers.price;
				}
			}
			catch (tempex) {
			}

			return null;
		}

		function getProductSku() {
			try {
				if (typeof (_insideData) != "undefined" && _insideData != null && _insideData.product && _insideData.product.sku)
					return _insideData.product.sku;
			}
			catch (tempex) { }

			try {
				var ldjsons = _insideJQ('script[type="application/ld+json"]');
				for (var i = 0; i < ldjsons.length; i++) {
					var tempdata = JSON.parse(_insideJQ(ldjsons[i]).last().html().replace(/\n/g, ""));
					if (typeof (tempdata) != "undefined" && tempdata != null && _insideJQ.isArray(tempdata)) {
						for (var l = 0; l < tempdata.length; l++) {
							var tempdetail = tempdata[i];
							if (typeof (tempdetail) != "undefined" && tempdetail != null && typeof (tempdetail["@type"]) != "undefined" && tempdetail["@type"] != null && tempdetail["@type"] == "Product" && typeof (tempdetail.sku) != "undefined" && tempdetail.sku != null && tempdetail.sku.length > 0) {
								if (_insideJQ.isArray(tempdetail.sku)) {
									return tempdetail.sku[0];
								}
								else
									return tempdetail.sku;
							}
						}
					}
					else if (typeof (tempdata) != "undefined" && tempdata != null && typeof (tempdata["@type"]) != "undefined" && tempdata["@type"] != null && tempdata["@type"] == "Product" && typeof (tempdata.sku) != "undefined" && tempdata.sku != null && tempdata.sku.length > 0) {
						if (_insideJQ.isArray(tempdata.sku)) {
							return tempdata.sku[0];
						}
						else
							return tempdata.sku;
					}
				}
			}
			catch (tempex) {
			}

			return null;
		}

		function getCategory() {
			try {
				if (typeof (_insideData) != "undefined" && _insideData != null && _insideData.product && _insideData.product.category)
					return _insideData.product.category;
			}
			catch (tempex) { }

			try {
				var breadcrumbs = _insideJQ(".breadcrumbs");

				if (breadcrumbs != null && breadcrumbs.length > 0) {
					var path = "";
					for (var i = 1; i < breadcrumbs.length; i++) {
						var temp = breadcrumbs[i].innerText || breadcrumbs[i].textContent;
						var tempelem = breadcrumbs[i].getElementsByTagName("a");
						if (tempelem != null && tempelem.length > 0) {
							temp = tempelem[0].innerText || tempelem[0].textContent;
						}
						temp = myTrim(temp);
						if (temp != "/")
							path += (path != "" ? " / " : "") + temp;
					}
					if (path != "")
						return path;

				}
			}
			catch (tempex) {
			}

			try {
				if (_insideDataLayer && _insideDataLayer.products) {
					if (_insideDataLayer.products[0] && _insideDataLayer.products[0].category)
						return _insideDataLayer.products[0].category;
				}
			}
			catch (tempex) { }

			return null;
		}

		function getOrderData() {
			try {
				var data = [];
				var totalprice = 0;
				var orderId = "auto";

				if (_insideData && _insideData.cart && _insideData.cart.items && _insideData.cart.items.length > 0) {
					var tempitems = _insideData.cart.items;
					for (var i = 0; i < tempitems.length; i++) {
						var tempitem = tempitems[i];
						var insideitem = {};
						insideitem.action = "addItem";
						insideitem.orderId = orderId;
						insideitem.name = tempitem.name
						insideitem.img = tempitem.image;
						insideitem.sku = tempitem.sku;
						insideitem.qty = tempitem.qty;
						insideitem.price = tempitem.price;

						try {
							if (tempitem.url) {
								insideitem.url = tempitem.url;
							}

							if (tempitem.category) {
								insideitem.category = tempitem.category;
								if (insideitem.category != null && insideitem.category.length > 0) {
									if (insideitem.category.length > 149)
										insideitem.category = insideitem.category.substring(0, 149);
								}
							}
						} catch (urlex) { }

						totalprice = totalprice + (insideitem.price * insideitem.qty);

						data.push(insideitem);
					}
				}

				if (data.length > 0) {

					try {
						var temptotal = _insideData.cart.total;
						if (isNumeric(temptotal)) {
							totalprice = parseFloat(temptotal);;
						}
					} catch (totalex) { }

					data.push({
						"action": "trackOrder",
						"orderId": orderId,
						"orderTotal": totalprice
					});

					return data;
				}
			}
			catch (ex) {
				log("getOrderData error. ", ex);
			}

			try {
				var data = [];
				var totalprice = 0;
				var tempcurrency = null;

				var tables = null;
				if (typeof (dataLayer) != "undefined" && dataLayer != null && dataLayer.length > 0) {
					for (var i = dataLayer.length - 1; i >= 0; i--) {
						if (typeof (dataLayer[i].ecommerce) != "undefined" && dataLayer[i].ecommerce != null
							&& typeof (dataLayer[i].ecommerce.checkout) != "undefined" && dataLayer[i].ecommerce.checkout != null
							&& typeof (dataLayer[i].ecommerce.checkout.products) != "undefined" && dataLayer[i].ecommerce.checkout.products != null
							&& dataLayer[i].ecommerce.checkout.products.length > 0) {
							tables = dataLayer[i].ecommerce.checkout.products;
							if (typeof (dataLayer[i].ecommerce.currencyCode) != "undefined" && dataLayer[i].ecommerce.currencyCode != null && dataLayer[i].ecommerce.currencyCode.length > 0)
								tempcurrency = dataLayer[i].ecommerce.currencyCode.toUpperCase();
							break;
						}
					}
				}

				var tempimgs = _insideJQ(".services-panel-cart-item .image img");
				if (tempimgs.length == 0) {
					tempimgs = _insideJQ(".services-side-panel-single-product .image img");
				}

				if (tables != null && tables.length > 0) {
					for (var i = 0; i < tables.length; i++) {
						var row = tables[i];

						var item_name = row.name;
						var sku = row.id;
						var category = row.category;
						var price = parseFloat(row.price);
						var qty = 1;
						if (typeof (row.quantity) != "undefined" && row.quantity != null)
							qty = row.quantity;
						totalprice = totalprice + (price * qty);

						var orderitem = {
							"action": "addItem",
							"orderId": "auto",
							"name": item_name,
							"price": price,
							"sku": sku,
							"category": category,
							"qty": qty
						};

						try {
							if (tempimgs.length > 0) {
								tempimgs.each(function (index) {
									var tempsrc = _insideJQ(this).get(0).currentSrc;
									if (tempsrc && tempsrc.toLowerCase().indexOf(orderitem.sku.toLowerCase()) != -1) {
										orderitem.img = tempsrc;
										return false;
									}
								});
							}
						} catch (tempex) { }

						data.push(orderitem);
					}

					if (data.length > 0) {
						try {
							var temptext = _insideJQ(".final-total").first().text();
							if (temptext != null && temptext.length > 0) {
								var decimalSign = getDecimalSign(myTrim(temptext.replace(/[^\d.,]/g, '')));
								if (decimalSign == ",") {
									temptext = temptext.replace(/[.]/g, "");
									temptext = temptext.replace(",", ".");
								}
								temptext = parseFloat(temptext.replace(/[^0-9\.\-\+]/g, ""));
								if (isNumeric(temptext))
									totalprice = temptext;
							}
						} catch (totalex) { }

						var orderdata = {
							"action": "trackOrder",
							"orderId": "auto",
							"orderTotal": totalprice
						};

						if (_insideCurrency != null) {
							orderdata.data = {};
							orderdata.data.currency = _insideCurrency;
						}

						if (tempcurrency != null) {
							orderdata.data = {};
							orderdata.data.currency = tempcurrency;
						}

						data.push(orderdata);

						sessionStorage.setItem("insideordertotal", totalprice);
					}

					return data;
				}
			}
			catch (ex) {
				log("getOrderData error. ", ex);
			}

			// Getting from mini-cart not needed anymore
			// try {
			// 	var data = [];
			// 	var totalprice = 0;
			// 	var orderId = "auto";

			// 	var tempitems = _insideJQ("#shopping-cart:first .services-panel-cart-item");

			// 	tempitems.each(function (index) {
			// 		var tempitem = _insideJQ(this);
			// 		var insideitem = {};
			// 		insideitem.action = "addItem";
			// 		insideitem.orderId = orderId;
			// 		insideitem.name = myTrim(tempitem.find(".name").text());
			// 		insideitem.sku = insideitem.name;
			// 		insideitem.img = tempitem.find(".image img").get(0).currentSrc;

			// 		var tempqty = tempitem.find(".c-quantityCounter__qty").text();
			// 		insideitem.qty = parseFloat(myTrim(tempqty.replace(/[^\d.,]/g, '')));

			// 		var tempprice = tempitem.find(".prodInfo .price").text();
			// 		var decimalSign = getDecimalSign(myTrim(tempprice.replace(/[^\d.,]/g, '')));
			// 		if (decimalSign == ",") {
			// 			tempprice = tempprice.replace(/[.]/g, "");
			// 			tempprice = tempprice.replace(",", ".");
			// 		}
			// 		insideitem.price = parseFloat(tempprice.replace(/[^0-9\.\-\+]/g, ""));

			// 		totalprice = totalprice + (insideitem.price * insideitem.qty);

			// 		data.push(insideitem);
			// 	});

			// 	if (data.length > 0) {
			// 		data.push({
			// 			"action": "trackOrder",
			// 			"orderId": orderId,
			// 			"orderTotal": totalprice
			// 		});

			// 		sessionStorage.setItem("insideordertotal", totalprice);

			// 		return data;
			// 	}
			// }
			// catch (ex) {
			// 	log("getOrderData error. ", ex);
			// }

			return null;
		}

		function updateOrderdata() {
			try {
				var totalprice = 0;
				var tempcurrency = null;
				var tempinsideview = getViewData();

				var dataitems = null;
				if (typeof (dataLayer) != "undefined" && dataLayer != null && dataLayer.length > 0) {
					for (var i = dataLayer.length - 1; i >= 0; i--) {
						if (dataLayer[i] && dataLayer[i].ecommerce && dataLayer[i].ecommerce.items && dataLayer[i].event && dataLayer[i].event == "add_to_cart" && dataLayer[i].ecommerce.items.length > 0) {
							dataitems = dataLayer[i].ecommerce.items;
							if (typeof (dataLayer[i].ecommerce.currency) != "undefined" && dataLayer[i].ecommerce.currency != null && dataLayer[i].ecommerce.currency.length > 0)
								tempcurrency = dataLayer[i].ecommerce.currency.toUpperCase();
							break;
						}
					}
				}

				if (dataitems != null && dataitems.length > 0) {
					for (var i = 0; i < dataitems.length; i++) {
						var tempitem = dataitems[i];

						var insideitem = {
							"action": "addItem",
							"orderId": "auto"
						};

						insideitem.name = tempitem.item_name;
						insideitem.sku = tempitem.item_id;
						insideitem.price = parseFloat(tempitem.price);
						insideitem.qty = 1;
						if (typeof (tempitem.quantity) != "undefined" && tempitem.quantity != null)
							insideitem.qty = parseFloat(tempitem.quantity);

						totalprice = totalprice + (insideitem.price * insideitem.qty);

						try {
							if (tempitem.item_category) {
								insideitem.category = tempitem.item_category;
								if (insideitem.category != null && insideitem.category.length > 0) {
									if (insideitem.category.length > 149)
										insideitem.category = insideitem.category.substring(0, 149);
								}
							}
						} catch (urlex) { }

						_inside.push(insideitem);
					}

					if (_inside.length > 0) {
						try {
							var temptotal = sessionStorage.getItem("insideordertotal");
							if (temptotal)
								totalprice = totalprice + parseFloat(temptotal);
						} catch (totalex) { }

						var orderdata = {
							"action": "trackOrder",
							"orderId": "auto",
							"update": true,
							"orderTotal": totalprice
						};

						if (tempcurrency != null) {
							orderdata.data = {};
							orderdata.data.currency = tempcurrency;
						}

						tempinsideview.orderId = "auto";
						tempinsideview.orderTotal = totalprice;
						_inside.push(orderdata);
						_inside.push(tempinsideview);

						sessionStorage.setItem("insideordertotal", totalprice);
					}

					_insideGraph.processQueue();
				}
			}
			catch (ex) {
				log("getOrderData error. ", ex);
			}

			return null;
		}

		function orderConfirmProcess() {
			try {
				var data = [];
				var detail = null;

				if (typeof (_insideData) != "undefined" && _insideData != null && _insideData.order)
					detail = _insideData.order;

				if (detail != null) {
					var totalprice = detail.total;
					var orderID = detail.id;
					var temppurchasedata = {};

					if (typeof (detail.shipping) != "undefined" && detail.shipping != null) {
						temppurchasedata.shipping = detail.shipping;
					}
					if (typeof (detail.tax) != "undefined" && detail.tax != null) {
						temppurchasedata.tax = detail.tax;
					}
					if (_insideCurrency != null) {
						temppurchasedata.currency = _insideCurrency;
					}

					// try {
					// 	var temporderdata = getOrderData();
					// 	if (temporderdata && temporderdata.length > 0)
					// 		data = temporderdata;
					// } catch (orderex) { }

					if (typeof (orderID) != "undefined" && orderID != null && orderID.length > 0 && orderID != "auto") {
						try {
							var lastOrderID = sessionStorage.getItem("insidelastorderid");
							if (lastOrderID == orderID) {
								return null;
							}
						}
						catch (orderidex) {
						}

						data.push({
							"action": "trackOrder",
							"orderId": "auto",
							"newOrderId": orderID,
							"orderTotal": totalprice,
							"data": temppurchasedata,
							"update": true,
							"complete": true
						});
					}

					return data;
				}
			}
			catch (ex) {
				log("orderConfirmProcess error. ", ex);
			}

			try {
				var data = [];
				var tempcurrency = null;

				var detail = null;
				if (typeof (dataLayer) != "undefined" && dataLayer != null && dataLayer.length > 0) {
					for (var i = dataLayer.length - 1; i >= 0; i--) {
						if (typeof (dataLayer[i]) != "undefined" && dataLayer[i] != null && typeof (dataLayer[i].ecommerce) != "undefined" && dataLayer[i].ecommerce != null
							&& typeof (dataLayer[i].ecommerce.purchase) != "undefined" && dataLayer[i].ecommerce.purchase != null
							&& typeof (dataLayer[i].ecommerce.purchase.actionField) != "undefined"
							&& dataLayer[i].ecommerce.purchase.actionField != null
							&& typeof (dataLayer[i].ecommerce.purchase.actionField.id) != "undefined"
							&& dataLayer[i].ecommerce.purchase.actionField.id != null
							&& dataLayer[i].ecommerce.purchase.actionField.id.length > 0) {
							detail = dataLayer[i].ecommerce.purchase;
							if (typeof (dataLayer[i].ecommerce.currencyCode) != "undefined" && dataLayer[i].ecommerce.currencyCode != null && dataLayer[i].ecommerce.currencyCode.length > 0) {
								tempcurrency = dataLayer[i].ecommerce.currencyCode.toUpperCase();
							}
						}
					}
				}

				if (detail != null) {
					var totalprice = detail.actionField.revenue;
					var orderID = detail.actionField.id;
					var temppurchasedata = {};

					if (typeof (detail.actionField.shipping) != "undefined" && detail.actionField.shipping != null) {
						temppurchasedata.shipping = detail.actionField.shipping;
					}
					if (typeof (detail.actionField.tax) != "undefined" && detail.actionField.tax != null) {
						temppurchasedata.tax = detail.actionField.tax;
					}
					if (tempcurrency != null) {
						temppurchasedata.currency = tempcurrency;
					}

					// var details = detail.products;

					// for (var i = 0; i < details.length; i++)
					// {
					// var price = details[i].price;
					// var qty = details[i].quantity;
					// var item_name = details[i].name;
					// var sku = details[i].id;
					//
					// data.push({
					// "action" : "addItem",
					// "orderId" : "auto",
					// "name" : myTrim(item_name),
					// "price" : price,
					// "img" : details[i].ImageURL,
					// "sku" : myTrim(sku),
					// "qty" : qty
					// });
					// }

					if (typeof (orderID) != "undefined" && orderID != null && orderID.length > 0 && orderID != "auto") {

						try {
							var lastOrderID = sessionStorage.getItem("insidelastorderid");
							if (lastOrderID == orderID) {
								return null;
							}
						}
						catch (orderidex) {
						}

						// data.push({
						// "action" : "trackOrder",
						// "orderId" : "auto",
						// "newOrderId" : orderID,
						// "orderTotal" : totalprice
						// });

						data.push({
							"action": "trackOrder",
							"orderId": "auto",
							"newOrderId": orderID,
							"orderTotal": totalprice,
							"data": temppurchasedata,
							"update": true,
							"complete": true
						});

						return data;
					}
				}
			}
			catch (ex) {
				log("orderConfirmProcess error. ", ex);
			}

			return null;
		}

		function getVisitorId() {

			return null;
		}

		function getVisitorName() {
			try {
				if (typeof (_insideData.user.email) != "undefined" && _insideData.user.email != null && validateEmail(_insideData.user.email) && _insideData.user.name) {
					return _insideData.user.name;
				}
			}
			catch (visitidex) {
			}

			return null;
		}

		function getVisitorData() {
			try {
				var tempdata = {};

				if (_insideDataLayer) {
					if (_insideDataLayer.country) {
						tempdata.country = _insideDataLayer.country.toUpperCase();
					}
					else {
						tempdata.country = window.location.host.split(".")[0];
					}

					if (_insideDataLayer.navlanguage) {
						tempdata.language = _insideDataLayer.navlanguage.toUpperCase();
					}
				}

				var tempusername = getVisitorName();
				if (tempusername != null && tempusername.length > 0) {
					tempdata.user_name = tempusername;
					tempdata.user_email = _insideData.user.email;
				}

				try {
					if (typeof (_insideData) != "undefined" && _insideData != null && _insideData.website && _insideData.website.country) {
						tempdata.country = _insideData.website.country;
					}

					if (typeof (_insideData) != "undefined" && _insideData != null && _insideData.website && _insideData.website.language) {
						tempdata.language = _insideData.website.language;
					}
				} catch (tempex) { }

				return tempdata;
			}
			catch (visitidex) {
			}

			return null;
		}

		function insertInsideTag() {
			try {
				_insideGraph.processQueue();
			}
			catch (tempex) {
			}
		}

		function sendToInside() {
			try {
				tracker.url = window.location.href;

				var visitorId = getVisitorId();
				if (visitorId != null && visitorId.length > 0) {
					tracker.visitorId = visitorId;
				}

				var visitorName = getVisitorName();
				if (visitorName != null && visitorName.length > 0) {
					tracker.visitorName = visitorName;
					tempinsideloggedinname = visitorName;
				}

				var visitorData = getVisitorData();
				if (visitorData != null) {
					tracker.visitorData = visitorData;
				}

				var view = getViewData();
				if (view != null) {
					if (view.type == "orderconfirmed") {
						var tempconfirm = orderConfirmProcess();
						if (tempconfirm != null && tempconfirm.length > 0) {
							for (var i = 0; i < tempconfirm.length; i++) {
								_inside.push(tempconfirm[i]);

								try {
									if (tempconfirm[i].action == "trackOrder")
										if (typeof (tempconfirm[i].newOrderId) != "undefined" && tempconfirm[i].newOrderId != null)
											sessionStorage.setItem("insidelastorderid", tempconfirm[i].newOrderId);
								}
								catch (tempex) {
								}
							}

							sessionStorage.removeItem("insideordertotal");
						}
						else {
							view.type == "other";
						}
					}
					else {
						var orderData = getOrderData();

						if (orderData != null && orderData.length > 0) {
							for (var i = 0; i < orderData.length; i++) {
								_inside.push(orderData[i]);
								if (orderData[i].action == "trackOrder") {
									view.orderId = orderData[i].orderId;
									view.orderTotal = orderData[i].orderTotal;
									insideOrderTotal = orderData[i].orderTotal;
								}
							}
						}
						else {
							try {
								if (view.url.indexOf("/shopping-bag") != -1) {
									sessionStorage.removeItem("insideordertotal");
								}
								else {
									var temptotal = sessionStorage.getItem("insideordertotal");
									if (temptotal != null) {
										var tempcount = _insideJQ("#shopping-cart-icon .num-items").first().text();
										tempcount = parseFloat(tempcount.replace(/[^0-9\.\-\+]/g, ""));

										if (tempcount > 0) {
											view.orderId = "auto";
											view.orderTotal = temptotal;
										}
									}
								}
							} catch (tempex) { }
						}
					}

					// Add currency code
					try {
						if (typeof (LPL) != "undefined" && LPL.config && LPL.config.currencyIsocode && LPL.config.currencyIsocode.length == 3) {
							_insideCurrency = LPL.config.currencyIsocode.toUpperCase();
						}

						if (typeof (_insideData) != "undefined" && _insideData.website && _insideData.website.currency && _insideData.website.currency.length == 3) {
							_insideCurrency = _insideData.website.currency;
						}

						if (_insideCurrency) {
							if (_inside != null && _inside.length > 0) {
								for (var i = 0; i < _inside.length; i++) {
									if (_inside[i].action == "trackOrder") {
										if (typeof (_inside[i].data) == "undefined" || _inside[i].data == null) {
											_inside[i].data = {};
										}

										if (typeof (_inside[i].data.currency) == "undefined" || _inside[i].data.currency == null) {
											_inside[i].data.currency = _insideCurrency;
										}
									}
								}
							}

							if (typeof (view.data) == "undefined" || view.data == null) {
								view.data = {};
							}
							view.data.currency = _insideCurrency;

							if (typeof (tracker.visitorData) == "undefined" || tracker.visitorData == null) {
								tracker.visitorData = {};
							}
							tracker.visitorData.currency = _insideCurrency;
						}
					} catch (currencyex) { }

					// try {
					// 	if (!_insideFirstLoad && view.type == "product") {
					// 		deferWait(function () {
					// 			_insideJQ(".indipendent-size-guide-cta").click(
					// 				function () { insideFrontInterface.triggerVisitorEvent("sizeguideclick"); }
					// 			);
					// 		}, function () {
					// 			if (typeof (_insideGraph) != "undefined" && _insideGraph != null && typeof (insideFrontInterface) != "undefined" && insideFrontInterface != null && insideFrontInterface.triggerVisitorEvent && _insideJQ) {
					// 				if (_insideJQ(".indipendent-size-guide-cta").length)
					// 					return true;
					// 			}

					// 			return false;
					// 		});
					// 	}
					// } catch (tempex) { };

					_inside.push(view);

					log("Inside Debug: ", _inside);
				}
			}
			catch (sendex) {
				_inside = [];

				_inside.push({
					"action": "trackView",
					"type": "other",
					"name": "Check: " + window.location.href
				});

				log(sendex);
			}

			insertInsideTag();
			if (!_insideFirstLoad)
				_insideFirstLoad = true;
		}

		var tempview = getViewData();
		if (tempview != null && typeof (tempview.type) != "undefined" && tempview.type != null && tempview.type == "orderconfirmed") {
			deferWait(sendToInside, function () {
				var tempconfirm = orderConfirmProcess();
				if (tempconfirm != null && tempconfirm.length > 0) {
					return true;
				}

				return document.readyState != 'loading' && document.readyState != 'interactive';
			});
		}
		else {
			deferWait(sendToInside, function () {
				if (document.readyState != 'loading' && document.readyState != 'interactive') {
					keepWait(function () { setTimeout(sendToInside, 1000) }, function () {
						if (!_insideFirstLoad) {
							try {
								var tempview = getViewData();
								if (tempview && tempview.type && tempview.type != temppageview) {
									temppageview = tempview.type;
								}

							} catch (tempex) { }
							return false;
						}

						if (typeof (_insideGraph) != "undefined" && _insideGraph != null) {
							var temporderdata = getOrderData();

							if (temporderdata != null && temporderdata.length > 0) {
								for (var i = 0; i < temporderdata.length; i++) {
									if (temporderdata[i].action == "trackOrder") {
										if (insideOrderTotal != temporderdata[i].orderTotal) {
											return true;
										}
									}
								}
							}
							else if (insideOrderTotal > 0) {
								insideOrderTotal = 0;
								return true;
							}

							var boolupdatedata = false;
							// var tempurl = window.location.href;
							// if (tempurl != tempcururl) {
							// 	tempcururl = tempurl;
							// 	boolupdatedata = true;
							// }

							try {
								var tempview = getViewData();
								if (tempview && tempview.type && tempview.type != temppageview) {
									temppageview = tempview.type;
									boolupdatedata = true;
								}

								if (tempview.type == "product") {
									if (_insideJQ(".overlayInternal .size-guide-section-container").length > 0) {
										if (!_insideSizeGuideVisible) {
											_insideSizeGuideVisible = true;
											boolupdatedata = true;
										}
									}
									else {
										if (_insideSizeGuideVisible) {
											_insideSizeGuideVisible = false;
											boolupdatedata = true;
										}
									}
								}
							} catch (tempex) { }

							try {
								if (tempinsideloggedinname == null) {
									var temploginname = getVisitorName();
									if (temploginname) {
										tempinsideloggedinname = temploginname;
										boolupdatedata = true;
									}
								}
							} catch (tempex) { }

							return boolupdatedata;
						}

						return false;
					});

					// if (tempview.type == "product") {
					// 	deferWait(updateOrderdata, function () {
					// 		if (!_insideFirstLoad)
					// 			return false;

					// 		if (typeof (_insideGraph) != "undefined" && _insideGraph != null) {
					// 			if (typeof (dataLayer) != "undefined" && dataLayer != null && dataLayer.length > 0) {
					// 				for (var i = _insideCartAddIndex; i <= dataLayer.length; i++) {
					// 					if (dataLayer[i] && dataLayer[i].ecommerce && dataLayer[i].ecommerce.items && dataLayer[i].event && dataLayer[i].event == "add_to_cart" && dataLayer[i].ecommerce.items.length > 0) {
					// 						_insideCartAddIndex = i + 1;
					// 						return true;
					// 					}
					// 				}
					// 			}
					// 		}

					// 		return false;
					// 	});
					// }

					return true;
				}

				return false;
			});
		}
	}

	if (typeof (_insideGraph) != "undefined" && _insideGraph != null && typeof (_insideGraph.current) != "undefined" && _insideGraph.current != null) {
		processInside(_insideGraph.current)
	}
	else {
		var insideTracker = {
			"action": "getTracker",
			"crossDomain": false,
			"account": accountKey
		};

		try {
			var subsiteMapping = {
				"it": "110",
				"fr": "111",
				"de": "112",
				"uk": "113",
				"es": "114",
				"ch": "115",
				"at": "116",
				"us": "117"
			};

			var temphostname = window.location.hostname.toLowerCase();
			for (var tempsubsitekey in subsiteMapping) {
				if (subsiteMapping.hasOwnProperty(tempsubsitekey)) {
					if (subsiteMapping[tempsubsitekey] != null) {
						if (temphostname.indexOf(tempsubsitekey) == 0) {
							subsiteId = subsiteMapping[tempsubsitekey];
							break;
						}
					}
				}
			}

			if (typeof (_insideData) != "undefined" && _insideData != null && _insideData.website && _insideData.website.country) {
				var tempdatacountry = _insideData.website.country.toLowerCase();
				if (subsiteMapping[tempdatacountry]) {
					subsiteId = subsiteMapping[tempdatacountry];
				}
			}
		} catch (subsiteex) { }

		if (typeof (subsiteId) != "undefined" && subsiteId != null)
			insideTracker["subsiteId"] = subsiteId;

		_inside.push(insideTracker);

		_inside.push({
			"action": "bind",
			"name": "onload",
			"callback": function (tracker) {
				if (_insideFirstLoad)
					return;

				_insideJQ = _insideGraph.jQuery;

				processInside(tracker)
			}
		});
		(function (w, d, s, u) {
			a = d.createElement(s), m = d.getElementsByTagName(s)[0];
			a.async = 1;
			a.src = u;
			m.parentNode.insertBefore(a, m);
		})(window, document, "script", "//" + trackerURL + "/ig.js");
	}

})();